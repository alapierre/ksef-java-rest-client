/*
 * KSeF
 * Krajowy Systemu e-Faktur
 *
 * OpenAPI spec version: 0.0.2
 * Contact: info.ksef@mf.gov.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.alapierre.ksef.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * QueryCriteriaInvoiceType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-19T16:15:43.054535+01:00[Europe/Warsaw]")

public class QueryCriteriaInvoiceType {
  /**
   * Gets or Sets criteriaType
   */
  @JsonAdapter(CriteriaTypeEnum.Adapter.class)
  public enum CriteriaTypeEnum {
    DETAIL("detail"),
    INCREMENTAL("incremental"),
    RANGE("range");

    private String value;

    CriteriaTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CriteriaTypeEnum fromValue(String input) {
      for (CriteriaTypeEnum b : CriteriaTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CriteriaTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CriteriaTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CriteriaTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CriteriaTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("criteriaType")
  private CriteriaTypeEnum criteriaType = null;

  /**
   * Gets or Sets subjectType
   */
  @JsonAdapter(SubjectTypeEnum.Adapter.class)
  public enum SubjectTypeEnum {
    SUBJECT1("subject1"),
    SUBJECT2("subject2"),
    SUBJECT3("subject3"),
    SUBJECTAUTHORIZED("subjectAuthorized");

    private String value;

    SubjectTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SubjectTypeEnum fromValue(String input) {
      for (SubjectTypeEnum b : SubjectTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SubjectTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubjectTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SubjectTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SubjectTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("subjectType")
  private SubjectTypeEnum subjectType = null;

  public QueryCriteriaInvoiceType() {
    this.criteriaType = CriteriaTypeEnum.valueOf(this.getClass().getSimpleName());
  }
  public QueryCriteriaInvoiceType criteriaType(CriteriaTypeEnum criteriaType) {
    this.criteriaType = criteriaType;
    return this;
  }

   /**
   * Get criteriaType
   * @return criteriaType
  **/
  @Schema(required = true, description = "")
  public CriteriaTypeEnum getCriteriaType() {
    return criteriaType;
  }

  public void setCriteriaType(CriteriaTypeEnum criteriaType) {
    this.criteriaType = criteriaType;
  }

  public QueryCriteriaInvoiceType subjectType(SubjectTypeEnum subjectType) {
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Get subjectType
   * @return subjectType
  **/
  @Schema(required = true, description = "")
  public SubjectTypeEnum getSubjectType() {
    return subjectType;
  }

  public void setSubjectType(SubjectTypeEnum subjectType) {
    this.subjectType = subjectType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryCriteriaInvoiceType queryCriteriaInvoiceType = (QueryCriteriaInvoiceType) o;
    return Objects.equals(this.criteriaType, queryCriteriaInvoiceType.criteriaType) &&
        Objects.equals(this.subjectType, queryCriteriaInvoiceType.subjectType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(criteriaType, subjectType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryCriteriaInvoiceType {\n");

    sb.append("    criteriaType: ").append(toIndentedString(criteriaType)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
