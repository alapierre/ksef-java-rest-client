/*
 * KSeF
 * Krajowy Systemu e-Faktur
 *
 * OpenAPI spec version: 0.0.2
 * Contact: info.ksef@mf.gov.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.alapierre.ksef.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * QueryInvoiceAsyncStatusResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-19T16:15:43.054535+01:00[Europe/Warsaw]")
public class QueryInvoiceAsyncStatusResponse {
  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("referenceNumber")
  private String referenceNumber = null;

  @SerializedName("processingCode")
  private Integer processingCode = null;

  @SerializedName("processingDescription")
  private String processingDescription = null;

  @SerializedName("elementReferenceNumber")
  private String elementReferenceNumber = null;

  @SerializedName("numberOfParts")
  private Integer numberOfParts = null;

  @SerializedName("numberOfElements")
  private Long numberOfElements = null;

  /**
   * Gets or Sets divisionType
   */
  @JsonAdapter(DivisionTypeEnum.Adapter.class)
  public enum DivisionTypeEnum {
    HOUR("hour"),
    DAY("day"),
    WEEK("week"),
    MONTH("month"),
    YEAR("year");

    private String value;

    DivisionTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DivisionTypeEnum fromValue(String input) {
      for (DivisionTypeEnum b : DivisionTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DivisionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DivisionTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DivisionTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DivisionTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("divisionType")
  private DivisionTypeEnum divisionType = null;

  @SerializedName("partList")
  private List<InvoiceDivisionPlainPartType> partList = new ArrayList<InvoiceDivisionPlainPartType>();

  public QueryInvoiceAsyncStatusResponse timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public QueryInvoiceAsyncStatusResponse referenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

   /**
   * Get referenceNumber
   * @return referenceNumber
  **/
  @Schema(required = true, description = "")
  public String getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(String referenceNumber) {
    this.referenceNumber = referenceNumber;
  }

  public QueryInvoiceAsyncStatusResponse processingCode(Integer processingCode) {
    this.processingCode = processingCode;
    return this;
  }

   /**
   * Get processingCode
   * minimum: 100
   * maximum: 999
   * @return processingCode
  **/
  @Schema(required = true, description = "")
  public Integer getProcessingCode() {
    return processingCode;
  }

  public void setProcessingCode(Integer processingCode) {
    this.processingCode = processingCode;
  }

  public QueryInvoiceAsyncStatusResponse processingDescription(String processingDescription) {
    this.processingDescription = processingDescription;
    return this;
  }

   /**
   * Get processingDescription
   * @return processingDescription
  **/
  @Schema(required = true, description = "")
  public String getProcessingDescription() {
    return processingDescription;
  }

  public void setProcessingDescription(String processingDescription) {
    this.processingDescription = processingDescription;
  }

  public QueryInvoiceAsyncStatusResponse elementReferenceNumber(String elementReferenceNumber) {
    this.elementReferenceNumber = elementReferenceNumber;
    return this;
  }

   /**
   * Get elementReferenceNumber
   * @return elementReferenceNumber
  **/
  @Schema(required = true, description = "")
  public String getElementReferenceNumber() {
    return elementReferenceNumber;
  }

  public void setElementReferenceNumber(String elementReferenceNumber) {
    this.elementReferenceNumber = elementReferenceNumber;
  }

  public QueryInvoiceAsyncStatusResponse numberOfParts(Integer numberOfParts) {
    this.numberOfParts = numberOfParts;
    return this;
  }

   /**
   * Get numberOfParts
   * minimum: 0
   * @return numberOfParts
  **/
  @Schema(required = true, description = "")
  public Integer getNumberOfParts() {
    return numberOfParts;
  }

  public void setNumberOfParts(Integer numberOfParts) {
    this.numberOfParts = numberOfParts;
  }

  public QueryInvoiceAsyncStatusResponse numberOfElements(Long numberOfElements) {
    this.numberOfElements = numberOfElements;
    return this;
  }

   /**
   * Get numberOfElements
   * minimum: 0
   * @return numberOfElements
  **/
  @Schema(required = true, description = "")
  public Long getNumberOfElements() {
    return numberOfElements;
  }

  public void setNumberOfElements(Long numberOfElements) {
    this.numberOfElements = numberOfElements;
  }

  public QueryInvoiceAsyncStatusResponse divisionType(DivisionTypeEnum divisionType) {
    this.divisionType = divisionType;
    return this;
  }

   /**
   * Get divisionType
   * @return divisionType
  **/
  @Schema(required = true, description = "")
  public DivisionTypeEnum getDivisionType() {
    return divisionType;
  }

  public void setDivisionType(DivisionTypeEnum divisionType) {
    this.divisionType = divisionType;
  }

  public QueryInvoiceAsyncStatusResponse partList(List<InvoiceDivisionPlainPartType> partList) {
    this.partList = partList;
    return this;
  }

  public QueryInvoiceAsyncStatusResponse addPartListItem(InvoiceDivisionPlainPartType partListItem) {
    this.partList.add(partListItem);
    return this;
  }

   /**
   * Get partList
   * @return partList
  **/
  @Schema(required = true, description = "")
  public List<InvoiceDivisionPlainPartType> getPartList() {
    return partList;
  }

  public void setPartList(List<InvoiceDivisionPlainPartType> partList) {
    this.partList = partList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryInvoiceAsyncStatusResponse queryInvoiceAsyncStatusResponse = (QueryInvoiceAsyncStatusResponse) o;
    return Objects.equals(this.timestamp, queryInvoiceAsyncStatusResponse.timestamp) &&
        Objects.equals(this.referenceNumber, queryInvoiceAsyncStatusResponse.referenceNumber) &&
        Objects.equals(this.processingCode, queryInvoiceAsyncStatusResponse.processingCode) &&
        Objects.equals(this.processingDescription, queryInvoiceAsyncStatusResponse.processingDescription) &&
        Objects.equals(this.elementReferenceNumber, queryInvoiceAsyncStatusResponse.elementReferenceNumber) &&
        Objects.equals(this.numberOfParts, queryInvoiceAsyncStatusResponse.numberOfParts) &&
        Objects.equals(this.numberOfElements, queryInvoiceAsyncStatusResponse.numberOfElements) &&
        Objects.equals(this.divisionType, queryInvoiceAsyncStatusResponse.divisionType) &&
        Objects.equals(this.partList, queryInvoiceAsyncStatusResponse.partList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, referenceNumber, processingCode, processingDescription, elementReferenceNumber, numberOfParts, numberOfElements, divisionType, partList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryInvoiceAsyncStatusResponse {\n");

    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    processingCode: ").append(toIndentedString(processingCode)).append("\n");
    sb.append("    processingDescription: ").append(toIndentedString(processingDescription)).append("\n");
    sb.append("    elementReferenceNumber: ").append(toIndentedString(elementReferenceNumber)).append("\n");
    sb.append("    numberOfParts: ").append(toIndentedString(numberOfParts)).append("\n");
    sb.append("    numberOfElements: ").append(toIndentedString(numberOfElements)).append("\n");
    sb.append("    divisionType: ").append(toIndentedString(divisionType)).append("\n");
    sb.append("    partList: ").append(toIndentedString(partList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
