/*
 * KSeF
 * Krajowy Systemu e-Faktur
 *
 * OpenAPI spec version: 0.0.2
 * Contact: info.ksef@mf.gov.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.alapierre.ksef.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * SessionInvoiceStatusType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-19T16:15:43.054535+01:00[Europe/Warsaw]")
public class SessionInvoiceStatusType {
  @SerializedName("processingCode")
  private Integer processingCode = null;

  @SerializedName("processingDescription")
  private String processingDescription = null;

  @SerializedName("elementReferenceNumber")
  private String elementReferenceNumber = null;

  @SerializedName("invoiceNumber")
  private String invoiceNumber = null;

  @SerializedName("ksefReferenceNumber")
  private String ksefReferenceNumber = null;

  @SerializedName("acquisitionTimestamp")
  private OffsetDateTime acquisitionTimestamp = null;

  public SessionInvoiceStatusType processingCode(Integer processingCode) {
    this.processingCode = processingCode;
    return this;
  }

   /**
   * Get processingCode
   * minimum: 100
   * maximum: 999
   * @return processingCode
  **/
  @Schema(required = true, description = "")
  public Integer getProcessingCode() {
    return processingCode;
  }

  public void setProcessingCode(Integer processingCode) {
    this.processingCode = processingCode;
  }

  public SessionInvoiceStatusType processingDescription(String processingDescription) {
    this.processingDescription = processingDescription;
    return this;
  }

   /**
   * Get processingDescription
   * @return processingDescription
  **/
  @Schema(required = true, description = "")
  public String getProcessingDescription() {
    return processingDescription;
  }

  public void setProcessingDescription(String processingDescription) {
    this.processingDescription = processingDescription;
  }

  public SessionInvoiceStatusType elementReferenceNumber(String elementReferenceNumber) {
    this.elementReferenceNumber = elementReferenceNumber;
    return this;
  }

   /**
   * Get elementReferenceNumber
   * @return elementReferenceNumber
  **/
  @Schema(required = true, description = "")
  public String getElementReferenceNumber() {
    return elementReferenceNumber;
  }

  public void setElementReferenceNumber(String elementReferenceNumber) {
    this.elementReferenceNumber = elementReferenceNumber;
  }

  public SessionInvoiceStatusType invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Get invoiceNumber
   * @return invoiceNumber
  **/
  @Schema(description = "")
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public SessionInvoiceStatusType ksefReferenceNumber(String ksefReferenceNumber) {
    this.ksefReferenceNumber = ksefReferenceNumber;
    return this;
  }

   /**
   * Get ksefReferenceNumber
   * @return ksefReferenceNumber
  **/
  @Schema(description = "")
  public String getKsefReferenceNumber() {
    return ksefReferenceNumber;
  }

  public void setKsefReferenceNumber(String ksefReferenceNumber) {
    this.ksefReferenceNumber = ksefReferenceNumber;
  }

  public SessionInvoiceStatusType acquisitionTimestamp(OffsetDateTime acquisitionTimestamp) {
    this.acquisitionTimestamp = acquisitionTimestamp;
    return this;
  }

   /**
   * Get acquisitionTimestamp
   * @return acquisitionTimestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getAcquisitionTimestamp() {
    return acquisitionTimestamp;
  }

  public void setAcquisitionTimestamp(OffsetDateTime acquisitionTimestamp) {
    this.acquisitionTimestamp = acquisitionTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionInvoiceStatusType sessionInvoiceStatusType = (SessionInvoiceStatusType) o;
    return Objects.equals(this.processingCode, sessionInvoiceStatusType.processingCode) &&
        Objects.equals(this.processingDescription, sessionInvoiceStatusType.processingDescription) &&
        Objects.equals(this.elementReferenceNumber, sessionInvoiceStatusType.elementReferenceNumber) &&
        Objects.equals(this.invoiceNumber, sessionInvoiceStatusType.invoiceNumber) &&
        Objects.equals(this.ksefReferenceNumber, sessionInvoiceStatusType.ksefReferenceNumber) &&
        Objects.equals(this.acquisitionTimestamp, sessionInvoiceStatusType.acquisitionTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processingCode, processingDescription, elementReferenceNumber, invoiceNumber, ksefReferenceNumber, acquisitionTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionInvoiceStatusType {\n");

    sb.append("    processingCode: ").append(toIndentedString(processingCode)).append("\n");
    sb.append("    processingDescription: ").append(toIndentedString(processingDescription)).append("\n");
    sb.append("    elementReferenceNumber: ").append(toIndentedString(elementReferenceNumber)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    ksefReferenceNumber: ").append(toIndentedString(ksefReferenceNumber)).append("\n");
    sb.append("    acquisitionTimestamp: ").append(toIndentedString(acquisitionTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
