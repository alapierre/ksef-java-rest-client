/*
 * KSeF
 * Krajowy Systemu e-Faktur
 *
 * OpenAPI spec version: 0.0.2
 * Contact: info.ksef@mf.gov.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.alapierre.ksef.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * InvoiceHeaderType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-12-19T16:15:43.054535+01:00[Europe/Warsaw]")
public class InvoiceHeaderType {
  @SerializedName("invoiceReferenceNumber")
  private String invoiceReferenceNumber = null;

  @SerializedName("ksefReferenceNumber")
  private String ksefReferenceNumber = null;

  @SerializedName("invoicingDate")
  private OffsetDateTime invoicingDate = null;

  @SerializedName("acquisitionTimestamp")
  private OffsetDateTime acquisitionTimestamp = null;

  @SerializedName("subjectBy")
  private SubjectByType subjectBy = null;

  @SerializedName("subjectByK")
  private SubjectByType subjectByK = null;

  @SerializedName("subjectTo")
  private SubjectToType subjectTo = null;

  @SerializedName("subjectToKList")
  private List<SubjectToType> subjectToKList = null;

  @SerializedName("subjectsOtherList")
  private List<SubjectOtherType> subjectsOtherList = null;

  @SerializedName("subjectsAuthorizedList")
  private List<SubjectAuthorizedType> subjectsAuthorizedList = null;

  @SerializedName("net")
  private String net = null;

  @SerializedName("vat")
  private String vat = null;

  @SerializedName("gross")
  private String gross = null;

  public InvoiceHeaderType invoiceReferenceNumber(String invoiceReferenceNumber) {
    this.invoiceReferenceNumber = invoiceReferenceNumber;
    return this;
  }

   /**
   * Get invoiceReferenceNumber
   * @return invoiceReferenceNumber
  **/
  @Schema(required = true, description = "")
  public String getInvoiceReferenceNumber() {
    return invoiceReferenceNumber;
  }

  public void setInvoiceReferenceNumber(String invoiceReferenceNumber) {
    this.invoiceReferenceNumber = invoiceReferenceNumber;
  }

  public InvoiceHeaderType ksefReferenceNumber(String ksefReferenceNumber) {
    this.ksefReferenceNumber = ksefReferenceNumber;
    return this;
  }

   /**
   * Get ksefReferenceNumber
   * @return ksefReferenceNumber
  **/
  @Schema(required = true, description = "")
  public String getKsefReferenceNumber() {
    return ksefReferenceNumber;
  }

  public void setKsefReferenceNumber(String ksefReferenceNumber) {
    this.ksefReferenceNumber = ksefReferenceNumber;
  }

  public InvoiceHeaderType invoicingDate(OffsetDateTime invoicingDate) {
    this.invoicingDate = invoicingDate;
    return this;
  }

   /**
   * Get invoicingDate
   * @return invoicingDate
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getInvoicingDate() {
    return invoicingDate;
  }

  public void setInvoicingDate(OffsetDateTime invoicingDate) {
    this.invoicingDate = invoicingDate;
  }

  public InvoiceHeaderType acquisitionTimestamp(OffsetDateTime acquisitionTimestamp) {
    this.acquisitionTimestamp = acquisitionTimestamp;
    return this;
  }

   /**
   * Get acquisitionTimestamp
   * @return acquisitionTimestamp
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getAcquisitionTimestamp() {
    return acquisitionTimestamp;
  }

  public void setAcquisitionTimestamp(OffsetDateTime acquisitionTimestamp) {
    this.acquisitionTimestamp = acquisitionTimestamp;
  }

  public InvoiceHeaderType subjectBy(SubjectByType subjectBy) {
    this.subjectBy = subjectBy;
    return this;
  }

   /**
   * Get subjectBy
   * @return subjectBy
  **/
  @Schema(required = true, description = "")
  public SubjectByType getSubjectBy() {
    return subjectBy;
  }

  public void setSubjectBy(SubjectByType subjectBy) {
    this.subjectBy = subjectBy;
  }

  public InvoiceHeaderType subjectByK(SubjectByType subjectByK) {
    this.subjectByK = subjectByK;
    return this;
  }

   /**
   * Get subjectByK
   * @return subjectByK
  **/
  @Schema(description = "")
  public SubjectByType getSubjectByK() {
    return subjectByK;
  }

  public void setSubjectByK(SubjectByType subjectByK) {
    this.subjectByK = subjectByK;
  }

  public InvoiceHeaderType subjectTo(SubjectToType subjectTo) {
    this.subjectTo = subjectTo;
    return this;
  }

   /**
   * Get subjectTo
   * @return subjectTo
  **/
  @Schema(required = true, description = "")
  public SubjectToType getSubjectTo() {
    return subjectTo;
  }

  public void setSubjectTo(SubjectToType subjectTo) {
    this.subjectTo = subjectTo;
  }

  public InvoiceHeaderType subjectToKList(List<SubjectToType> subjectToKList) {
    this.subjectToKList = subjectToKList;
    return this;
  }

  public InvoiceHeaderType addSubjectToKListItem(SubjectToType subjectToKListItem) {
    if (this.subjectToKList == null) {
      this.subjectToKList = new ArrayList<SubjectToType>();
    }
    this.subjectToKList.add(subjectToKListItem);
    return this;
  }

   /**
   * Get subjectToKList
   * @return subjectToKList
  **/
  @Schema(description = "")
  public List<SubjectToType> getSubjectToKList() {
    return subjectToKList;
  }

  public void setSubjectToKList(List<SubjectToType> subjectToKList) {
    this.subjectToKList = subjectToKList;
  }

  public InvoiceHeaderType subjectsOtherList(List<SubjectOtherType> subjectsOtherList) {
    this.subjectsOtherList = subjectsOtherList;
    return this;
  }

  public InvoiceHeaderType addSubjectsOtherListItem(SubjectOtherType subjectsOtherListItem) {
    if (this.subjectsOtherList == null) {
      this.subjectsOtherList = new ArrayList<SubjectOtherType>();
    }
    this.subjectsOtherList.add(subjectsOtherListItem);
    return this;
  }

   /**
   * Get subjectsOtherList
   * @return subjectsOtherList
  **/
  @Schema(description = "")
  public List<SubjectOtherType> getSubjectsOtherList() {
    return subjectsOtherList;
  }

  public void setSubjectsOtherList(List<SubjectOtherType> subjectsOtherList) {
    this.subjectsOtherList = subjectsOtherList;
  }

  public InvoiceHeaderType subjectsAuthorizedList(List<SubjectAuthorizedType> subjectsAuthorizedList) {
    this.subjectsAuthorizedList = subjectsAuthorizedList;
    return this;
  }

  public InvoiceHeaderType addSubjectsAuthorizedListItem(SubjectAuthorizedType subjectsAuthorizedListItem) {
    if (this.subjectsAuthorizedList == null) {
      this.subjectsAuthorizedList = new ArrayList<SubjectAuthorizedType>();
    }
    this.subjectsAuthorizedList.add(subjectsAuthorizedListItem);
    return this;
  }

   /**
   * Get subjectsAuthorizedList
   * @return subjectsAuthorizedList
  **/
  @Schema(description = "")
  public List<SubjectAuthorizedType> getSubjectsAuthorizedList() {
    return subjectsAuthorizedList;
  }

  public void setSubjectsAuthorizedList(List<SubjectAuthorizedType> subjectsAuthorizedList) {
    this.subjectsAuthorizedList = subjectsAuthorizedList;
  }

  public InvoiceHeaderType net(String net) {
    this.net = net;
    return this;
  }

   /**
   * Get net
   * @return net
  **/
  @Schema(required = true, description = "")
  public String getNet() {
    return net;
  }

  public void setNet(String net) {
    this.net = net;
  }

  public InvoiceHeaderType vat(String vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @Schema(required = true, description = "")
  public String getVat() {
    return vat;
  }

  public void setVat(String vat) {
    this.vat = vat;
  }

  public InvoiceHeaderType gross(String gross) {
    this.gross = gross;
    return this;
  }

   /**
   * Get gross
   * @return gross
  **/
  @Schema(required = true, description = "")
  public String getGross() {
    return gross;
  }

  public void setGross(String gross) {
    this.gross = gross;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceHeaderType invoiceHeaderType = (InvoiceHeaderType) o;
    return Objects.equals(this.invoiceReferenceNumber, invoiceHeaderType.invoiceReferenceNumber) &&
        Objects.equals(this.ksefReferenceNumber, invoiceHeaderType.ksefReferenceNumber) &&
        Objects.equals(this.invoicingDate, invoiceHeaderType.invoicingDate) &&
        Objects.equals(this.acquisitionTimestamp, invoiceHeaderType.acquisitionTimestamp) &&
        Objects.equals(this.subjectBy, invoiceHeaderType.subjectBy) &&
        Objects.equals(this.subjectByK, invoiceHeaderType.subjectByK) &&
        Objects.equals(this.subjectTo, invoiceHeaderType.subjectTo) &&
        Objects.equals(this.subjectToKList, invoiceHeaderType.subjectToKList) &&
        Objects.equals(this.subjectsOtherList, invoiceHeaderType.subjectsOtherList) &&
        Objects.equals(this.subjectsAuthorizedList, invoiceHeaderType.subjectsAuthorizedList) &&
        Objects.equals(this.net, invoiceHeaderType.net) &&
        Objects.equals(this.vat, invoiceHeaderType.vat) &&
        Objects.equals(this.gross, invoiceHeaderType.gross);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceReferenceNumber, ksefReferenceNumber, invoicingDate, acquisitionTimestamp, subjectBy, subjectByK, subjectTo, subjectToKList, subjectsOtherList, subjectsAuthorizedList, net, vat, gross);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceHeaderType {\n");

    sb.append("    invoiceReferenceNumber: ").append(toIndentedString(invoiceReferenceNumber)).append("\n");
    sb.append("    ksefReferenceNumber: ").append(toIndentedString(ksefReferenceNumber)).append("\n");
    sb.append("    invoicingDate: ").append(toIndentedString(invoicingDate)).append("\n");
    sb.append("    acquisitionTimestamp: ").append(toIndentedString(acquisitionTimestamp)).append("\n");
    sb.append("    subjectBy: ").append(toIndentedString(subjectBy)).append("\n");
    sb.append("    subjectByK: ").append(toIndentedString(subjectByK)).append("\n");
    sb.append("    subjectTo: ").append(toIndentedString(subjectTo)).append("\n");
    sb.append("    subjectToKList: ").append(toIndentedString(subjectToKList)).append("\n");
    sb.append("    subjectsOtherList: ").append(toIndentedString(subjectsOtherList)).append("\n");
    sb.append("    subjectsAuthorizedList: ").append(toIndentedString(subjectsAuthorizedList)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    gross: ").append(toIndentedString(gross)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
